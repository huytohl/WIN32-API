#include <Windows.h>

#define IDC_MAIN_EDIT 101
#define IDM_FILE_open 1
#define IDM_FILE_exit 2

LRESULT CALLBACK WndProc(HWND, UINT, WPARAM, LPARAM);

void AddMenus(HWND hwnd)
{
	HMENU hMenubar;
	HMENU hMenu;

	hMenubar = CreateMenu();
	hMenu = CreateMenu();

	AppendMenu(hMenu, MF_STRING, IDM_FILE_open, TEXT("open"));
	AppendMenu(hMenu, MF_STRING, IDM_FILE_exit, TEXT("exit"));

	AppendMenu(hMenu, MF_SEPARATOR, 0, NULL);
	AppendMenu(hMenubar, MF_POPUP, (UINT_PTR)hMenu, TEXT("file"));
	SetMenu(hwnd, hMenubar);
}





void DoFileOpen(HWND hwnd)
{
	OPENFILENAME ofn;
	char szFileName[MAX_PATH] = "";

	ZeroMemory(&ofn, sizeof(ofn));

	ofn.lStructSize = sizeof(OPENFILENAME);
	ofn.hwndOwner = hwnd;
	ofn.lpstrFilter = "Text Files (*.txt)\0*.txt\0All Files (*.*)\0*.*\0";
	ofn.lpstrFile = szFileName;
	ofn.nMaxFile = MAX_PATH;
	ofn.Flags = OFN_EXPLORER | OFN_FILEMUSTEXIST | OFN_HIDEREADONLY;
	ofn.lpstrDefExt = "txt";

	if (GetOpenFileName(&ofn))
	{
		HWND hEdit = GetDlgItem(hwnd, IDC_MAIN_EDIT);
	}
}


int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow)
{
	WNDCLASS wc = { 0 };
	HWND hwnd;
	MSG msg;


	wc.lpszClassName = TEXT("Window");
	wc.hInstance = hInstance;
	wc.hbrBackground = GetSysColorBrush(COLOR_3DFACE);
	wc.lpfnWndProc = WndProc;
	wc.hCursor = LoadCursor(NULL, IDC_ARROW);

	RegisterClass(&wc);

	hwnd = CreateWindow(wc.lpszClassName, TEXT("HUY"),
		WS_OVERLAPPEDWINDOW | WS_VISIBLE,
		100, 100, 250, 150,
		NULL, NULL, hInstance, NULL);


	while (GetMessage(&msg, NULL, 0, 0))
	{
		TranslateMessage(&msg);
		DispatchMessage(&msg);
	}
	return (int)msg.wParam;
}

LRESULT CALLBACK WndProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)
{
	switch (msg)
	{
	case WM_CREATE:
	{
					  AddMenus(hwnd);
					  break;
	}
	case WM_COMMAND:
	{
					   switch (LOWORD(wParam))
					   {
					   case IDM_FILE_open:
						   DoFileOpen(hwnd);
						   break;

					   case IDM_FILE_exit:
						   PostQuitMessage(0);
						   break;
					   }
	}
	case WM_DESTROY:
	{
					   PostQuitMessage(0);
					   break;
	}
	}
	return DefWindowProc(hwnd, msg, wParam, lParam);
}


