#include <Windows.h>
#include <stdio.h>
#include <string.h>

LRESULT CALLBACK WndProc(HWND, UINT, WPARAM, LPARAM);
HWND text;
HWND TEXTBOX1;
HWND TEXTBOX2;

void daochuoi(char s[]);



int WINAPI WinMain(HINSTANCE hInstance, HINSTANCE hPrevInstance, LPSTR lpCmdLine, int nCmdShow)
{
	WNDCLASS wc = { 0 };
	MSG msg;
	HWND hwnd;

	wc.style = CS_HREDRAW | CS_VREDRAW;
	wc.lpszClassName = TEXT("HUY");
	wc.hInstance = hInstance;
	wc.hbrBackground = GetSysColorBrush(COLOR_3DFACE);
	wc.lpfnWndProc = WndProc;
	wc.hCursor = LoadCursor(NULL, IDC_ARROW);
	RegisterClass(&wc);
	hwnd = CreateWindow(wc.lpszClassName, TEXT("HUY"),
		WS_OVERLAPPEDWINDOW | WS_VISIBLE | WS_MAXIMIZE,
		150, 150, 250, 150, NULL, NULL, hInstance, NULL);


	while (GetMessage(&msg, NULL, 0, 0))
	{
		TranslateMessage(&msg);
		DispatchMessage(&msg);
	}
	return (int)msg.wParam;
}

LRESULT CALLBACK WndProc(HWND hwnd, UINT msg, WPARAM wParam, LPARAM lParam)
{

	switch (msg)
	{
	case WM_CREATE:
	{
					  text = CreateWindow(TEXT("STATIC"), TEXT("moi nhap chuoi ben duoi"),
						  WS_VISIBLE | WS_CHILD | WS_BORDER,
						  50, 20, 230, 25,
						  hwnd, NULL, NULL, NULL);

					  TEXTBOX1 = CreateWindow(TEXT("EDIT"), TEXT(""),
						  WS_VISIBLE | WS_BORDER | WS_CHILD,
						  50, 50, 500, 25,
						  hwnd, (HMENU)4, NULL, NULL);

					  CreateWindow(TEXT("BUTTON"), TEXT("ENTER"),
						  WS_VISIBLE | WS_CHILD,
						  20, 80, 120, 25,
						  hwnd, (HMENU)1, NULL, NULL);

					  CreateWindow(TEXT("BUTTON"), TEXT("EXIT"),
						  WS_VISIBLE | WS_CHILD,
						  200, 80, 120, 25,
						  hwnd, (HMENU)2, NULL, NULL);

					  TEXTBOX2 = CreateWindow(TEXT("EDIT"), TEXT(""),
						  WS_VISIBLE | WS_BORDER | WS_CHILD,
						  50, 120, 500, 25,
						  hwnd, (HMENU)5, NULL, NULL);

					  return 0;
	}

	case WM_COMMAND:
	{
					   if (LOWORD(wParam) == 1)
					   {
						   char szText[MAX_PATH];							//khai báo biến cục bộ để lưu chuỗi text của TEXTBOX1
						   int iLength = GetWindowTextLength(TEXTBOX1);  //Nhận chiều dài của chuỗi text trong TEXTBOX1
						   if (iLength <= 0)
						   {
							   MessageBox(hwnd, TEXT("Error or text is NULL"), TEXT("Huy"), MB_OK | MB_ICONEXCLAMATION); return 0;
						   }
						   else
						   {
							   GetWindowText(TEXTBOX1, szText, iLength + 1);  // Nhận chuỗi vào buffer
							   daochuoi(szText);
							   SetWindowText(TEXTBOX2, szText);					//Ghi vào TEXTBOX2
						   }
						   return 0;
					   }
					   if (LOWORD(wParam) == 2)
					   {
						   PostQuitMessage(0);
					   }

					   break;
	}

	case WM_DESTROY:
	{
					   PostQuitMessage(0);
					   return 0;
	}
	}
	return DefWindowProc(hwnd, msg, wParam, lParam);
}

void daochuoi(char s[])
{
	char c;
	int len = strlen(s);
	for (int i = 0; i<len / 2; i++)
	{
		c = s[i];
		s[i] = s[len - 1 - i];
		s[len - 1 - i] = c;
	}

}
